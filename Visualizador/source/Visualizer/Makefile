#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = -I../Library/include -I../../external/include -I/home/liliane/Documentos/Libs/glfw-3.2.1/build/install/include -I/usr/include/freetype2 -I/home/liliane/Documentos/Libs/glew-2.1.0/build/cmake/build/install/include
CFLAGS = -std=c++11
RESINC = 
LIBDIR = -L/home/liliane/Documentos/Libs/glew-2.1.0/build/cmake/build/install/lib -L/home/liliane/Documentos/Libs/glfw-3.2.1/build/install/lib -L/home/liliane/Documentos/SVN/Nanotubos/gcgtubeHal9000/lib -L../../lib
LIB = -lGLEW -lglfw -lGL -lX11 -lpthread -lXrandr -lXi -lXcursor -lgsl -lgslcblas /usr/lib/x86_64-linux-gnu/libfreetype.so /usr/lib/x86_64-linux-gnu/libpng12.a /usr/lib/x86_64-linux-gnu/libz.a -lLibrary
LDFLAGS = 

INC_DEBUG = $(INC) -Iinclude
CFLAGS_DEBUG = $(CFLAGS) -Wall -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = ../../build/Debug/Visualizer

INC_RELEASE = $(INC) -Iinclude
CFLAGS_RELEASE = $(CFLAGS) -march=core2 -fexpensive-optimizations -O3 -Wall -std=c++11 -fPIC
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = ../../build/Release/Visualizer

OBJ_DEBUG = $(OBJDIR_DEBUG)/LinearSolver.o $(OBJDIR_DEBUG)/NanotubeMaterial.o $(OBJDIR_DEBUG)/OrbitCamera.o $(OBJDIR_DEBUG)/Source.o $(OBJDIR_DEBUG)/SuperBlock.o $(OBJDIR_DEBUG)/Visualizer.o $(OBJDIR_DEBUG)/VisualizerCommon.o $(OBJDIR_DEBUG)/nanotube.o $(OBJDIR_DEBUG)/Block.o $(OBJDIR_DEBUG)/CatmullRom.o $(OBJDIR_DEBUG)/Contact.o $(OBJDIR_DEBUG)/DrawableNanotube.o $(OBJDIR_DEBUG)/__/Library/Text2D.o $(OBJDIR_DEBUG)/DrawableSpheres.o $(OBJDIR_DEBUG)/Forest.o $(OBJDIR_DEBUG)/Graph.o $(OBJDIR_DEBUG)/Laplacian.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/LinearSolver.o $(OBJDIR_RELEASE)/NanotubeMaterial.o $(OBJDIR_RELEASE)/OrbitCamera.o $(OBJDIR_RELEASE)/Source.o $(OBJDIR_RELEASE)/SuperBlock.o $(OBJDIR_RELEASE)/Visualizer.o $(OBJDIR_RELEASE)/VisualizerCommon.o $(OBJDIR_RELEASE)/nanotube.o $(OBJDIR_RELEASE)/Block.o $(OBJDIR_RELEASE)/CatmullRom.o $(OBJDIR_RELEASE)/Contact.o $(OBJDIR_RELEASE)/DrawableNanotube.o $(OBJDIR_RELEASE)/__/Library/Text2D.o $(OBJDIR_RELEASE)/DrawableSpheres.o $(OBJDIR_RELEASE)/Forest.o $(OBJDIR_RELEASE)/Graph.o $(OBJDIR_RELEASE)/Laplacian.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d ../../build/Debug || mkdir -p ../../build/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)
	test -d $(OBJDIR_DEBUG)/__/Library || mkdir -p $(OBJDIR_DEBUG)/__/Library

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/LinearSolver.o: LinearSolver.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c LinearSolver.cpp -o $(OBJDIR_DEBUG)/LinearSolver.o

$(OBJDIR_DEBUG)/NanotubeMaterial.o: NanotubeMaterial.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c NanotubeMaterial.cpp -o $(OBJDIR_DEBUG)/NanotubeMaterial.o

$(OBJDIR_DEBUG)/OrbitCamera.o: OrbitCamera.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c OrbitCamera.cpp -o $(OBJDIR_DEBUG)/OrbitCamera.o

$(OBJDIR_DEBUG)/Source.o: Source.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Source.cpp -o $(OBJDIR_DEBUG)/Source.o

$(OBJDIR_DEBUG)/SuperBlock.o: SuperBlock.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c SuperBlock.cpp -o $(OBJDIR_DEBUG)/SuperBlock.o

$(OBJDIR_DEBUG)/Visualizer.o: Visualizer.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Visualizer.cpp -o $(OBJDIR_DEBUG)/Visualizer.o

$(OBJDIR_DEBUG)/VisualizerCommon.o: VisualizerCommon.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c VisualizerCommon.cpp -o $(OBJDIR_DEBUG)/VisualizerCommon.o

$(OBJDIR_DEBUG)/nanotube.o: nanotube.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c nanotube.cpp -o $(OBJDIR_DEBUG)/nanotube.o

$(OBJDIR_DEBUG)/Block.o: Block.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Block.cpp -o $(OBJDIR_DEBUG)/Block.o

$(OBJDIR_DEBUG)/CatmullRom.o: CatmullRom.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c CatmullRom.cpp -o $(OBJDIR_DEBUG)/CatmullRom.o

$(OBJDIR_DEBUG)/Contact.o: Contact.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Contact.cpp -o $(OBJDIR_DEBUG)/Contact.o

$(OBJDIR_DEBUG)/DrawableNanotube.o: DrawableNanotube.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c DrawableNanotube.cpp -o $(OBJDIR_DEBUG)/DrawableNanotube.o

$(OBJDIR_DEBUG)/__/Library/Text2D.o: ../Library/Text2D.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ../Library/Text2D.cpp -o $(OBJDIR_DEBUG)/__/Library/Text2D.o

$(OBJDIR_DEBUG)/DrawableSpheres.o: DrawableSpheres.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c DrawableSpheres.cpp -o $(OBJDIR_DEBUG)/DrawableSpheres.o

$(OBJDIR_DEBUG)/Forest.o: Forest.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Forest.cpp -o $(OBJDIR_DEBUG)/Forest.o

$(OBJDIR_DEBUG)/Graph.o: Graph.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Graph.cpp -o $(OBJDIR_DEBUG)/Graph.o

$(OBJDIR_DEBUG)/Laplacian.o: Laplacian.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Laplacian.cpp -o $(OBJDIR_DEBUG)/Laplacian.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf ../../build/Debug
	rm -rf $(OBJDIR_DEBUG)
	rm -rf $(OBJDIR_DEBUG)/__/Library

before_release: 
	test -d ../../build/Release || mkdir -p ../../build/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)
	test -d $(OBJDIR_RELEASE)/__/Library || mkdir -p $(OBJDIR_RELEASE)/__/Library

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/LinearSolver.o: LinearSolver.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c LinearSolver.cpp -o $(OBJDIR_RELEASE)/LinearSolver.o

$(OBJDIR_RELEASE)/NanotubeMaterial.o: NanotubeMaterial.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c NanotubeMaterial.cpp -o $(OBJDIR_RELEASE)/NanotubeMaterial.o

$(OBJDIR_RELEASE)/OrbitCamera.o: OrbitCamera.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c OrbitCamera.cpp -o $(OBJDIR_RELEASE)/OrbitCamera.o

$(OBJDIR_RELEASE)/Source.o: Source.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Source.cpp -o $(OBJDIR_RELEASE)/Source.o

$(OBJDIR_RELEASE)/SuperBlock.o: SuperBlock.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c SuperBlock.cpp -o $(OBJDIR_RELEASE)/SuperBlock.o

$(OBJDIR_RELEASE)/Visualizer.o: Visualizer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Visualizer.cpp -o $(OBJDIR_RELEASE)/Visualizer.o

$(OBJDIR_RELEASE)/VisualizerCommon.o: VisualizerCommon.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c VisualizerCommon.cpp -o $(OBJDIR_RELEASE)/VisualizerCommon.o

$(OBJDIR_RELEASE)/nanotube.o: nanotube.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c nanotube.cpp -o $(OBJDIR_RELEASE)/nanotube.o

$(OBJDIR_RELEASE)/Block.o: Block.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Block.cpp -o $(OBJDIR_RELEASE)/Block.o

$(OBJDIR_RELEASE)/CatmullRom.o: CatmullRom.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c CatmullRom.cpp -o $(OBJDIR_RELEASE)/CatmullRom.o

$(OBJDIR_RELEASE)/Contact.o: Contact.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Contact.cpp -o $(OBJDIR_RELEASE)/Contact.o

$(OBJDIR_RELEASE)/DrawableNanotube.o: DrawableNanotube.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c DrawableNanotube.cpp -o $(OBJDIR_RELEASE)/DrawableNanotube.o

$(OBJDIR_RELEASE)/__/Library/Text2D.o: ../Library/Text2D.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ../Library/Text2D.cpp -o $(OBJDIR_RELEASE)/__/Library/Text2D.o

$(OBJDIR_RELEASE)/DrawableSpheres.o: DrawableSpheres.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c DrawableSpheres.cpp -o $(OBJDIR_RELEASE)/DrawableSpheres.o

$(OBJDIR_RELEASE)/Forest.o: Forest.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Forest.cpp -o $(OBJDIR_RELEASE)/Forest.o

$(OBJDIR_RELEASE)/Graph.o: Graph.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Graph.cpp -o $(OBJDIR_RELEASE)/Graph.o

$(OBJDIR_RELEASE)/Laplacian.o: Laplacian.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Laplacian.cpp -o $(OBJDIR_RELEASE)/Laplacian.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf ../../build/Release
	rm -rf $(OBJDIR_RELEASE)
	rm -rf $(OBJDIR_RELEASE)/__/Library

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

